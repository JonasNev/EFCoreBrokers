@model EFCoreBrokers.Dtos.ApartmentCreate

<h2>Make changes and add a broker(or more)</h2>

@using (Html.BeginForm("Edit", "Apartment", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(c => c.Apartment.City, "City")
        @Html.TextBoxFor(c => c.Apartment.City, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Apartment.Street, "Street")
        @Html.TextBoxFor(c => c.Apartment.Street, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Apartment.HouseNR, "House No.")
        @Html.TextBoxFor(c => c.Apartment.HouseNR, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Apartment.FlatNr, "Flat No.")
        @Html.TextBoxFor(c => c.Apartment.FlatNr, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Apartment.Floor, "Building Floor")
        @Html.TextBoxFor(c => c.Apartment.Floor, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label asp-for="Broker.Id" class="control-label">Broker</label>
        <div>
            @Html.DropDownListFor(m => m.Apartment.Broker_id, new SelectList(Model.Brokers, "Id", "Name"), "", new { @class = "form-control" })
        </div>
    </div>
    @Html.HiddenFor(c => c.Apartment.Id)
    @Html.HiddenFor(c => c.Apartment.Company_id)
    <button type="submit" class="btn btn-primary">Add</button>
    @Html.ActionLink("Cancel", "Index", "Company", null, new { @class = "btn btn-secondary" })
}
